//  
//  Copyright (c) 2014-2016 CASM Organization
//  All rights reserved.
//  
//  Developed by: Philipp Paulweber
//                Emmanuel Pescosta
//                https://github.com/casm-lang/libcasm-tc
//  
//  This file is part of libcasm-tc.
//  
//  libcasm-tc is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//  
//  libcasm-tc is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  GNU General Public License for more details.
//  
//  You should have received a copy of the GNU General Public License
//  along with libcasm-tc. If not, see <http://www.gnu.org/licenses/>.
//  

//@ TC()

CASM init foo

function (static) a: -> Integer initially { 2, }
function (static) b: Integer -> Integer initially { 1 -> 1, 2 -> 2, 3 -> 3, }
function c: Integer * Integer * -> Integer

derived derived_mul( param_a, param_b, ) = a * b( 2 )
derived d_no_params( ) = 2

enum testEnum = { enumA, enumB, enumC, }

rule foo = {
  assert len([1,]) = 1
  assert len([1,2,]) = 2
  assert len([1,2,3,]) = 3

  program( self ) := undef
}

rule r_no_params( ) = {
  skip
}

rule test_rule( rule_param_a : Integer, rule_param_b : Integer, ) = {
  skip
}

