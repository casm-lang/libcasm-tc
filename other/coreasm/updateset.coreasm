CoreASM updateset
//
//  Copyright (C) 2014-2021 CASM Organization <https://casm-lang.org>
//  All rights reserved.
//
//  Developed by: Philipp Paulweber
//                Emmanuel Pescosta
//                <https://github.com/casm-lang/libcasm-tc>
//
//  This file is part of libcasm-tc.
//
//  libcasm-tc is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  libcasm-tc is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with libcasm-tc. If not, see <http://www.gnu.org/licenses/>.
//
//  Additional permission under GNU GPL version 3 section 7
//
//  libcasm-tc is distributed under the terms of the GNU General Public License
//  with the following clarification and special exception: Linking libcasm-tc
//  statically or dynamically with other modules is making a combined work
//  based on libcasm-tc. Thus, the terms and conditions of the GNU General
//  Public License cover the whole combination. As a special exception,
//  the copyright holders of libcasm-tc give you permission to link libcasm-tc
//  with independent modules to produce an executable, regardless of the
//  license terms of these independent modules, and to copy and distribute
//  the resulting executable under terms of your choice, provided that you
//  also meet, for each linked independent module, the terms and conditions
//  of the license of that module. An independent module is a module which
//  is not derived from or based on libcasm-tc. If you modify libcasm-tc, you
//  may extend this exception to your version of the library, but you are
//  not obliged to do so. If you do not wish to do so, delete this exception
//  statement from your version.
//

// the output should be:
// ~~~
// 1664a
// 5ac5d
// 7e0ad
// 123456 steps later...
// ~~~

init setup

use StandardPlugins
use ConditionalRule
use Math

function x : -> Integer initially { 0 }
function y : -> Integer initially { 0 }
function z : -> Integer initially { 0 }

function cnt : -> Integer initially { 0 }

rule setup =
par
    x := 0
    y := 0
    z := 0
    cnt := 0
    program(self) := @foo
endpar

rule foo = 
seq
    x := 1
    x := 1
    y := 1
    z := 1
    x := 1
    par
    seq
    cnt := cnt + 1

    x := 1
    x := 1
    y := 1
    z := 1
    y := 1
    x := 1
    x := 1
    x := 1
    y := 1
    x := 1
    z := 1
    x := 1
    y := 1
    x := 1
    z := 1
    x := 1
    y := 1
    z := 1
    x := 1
    x := 1
    x := 1
    x := 1
    y := 1
    z := 1
    y := 1
    x := 1
    x := 1
    x := 1
    y := 1
    x := 1
    z := 1
    x := 1
    y := 1
    x := 1
    z := 1
    x := 1
    y := 1
    z := 1
    x := 1
    x := 1
    x := 1
    x := 1
    y := 1
    z := 1
    y := 1
    x := 1
    x := 1
    x := 1
    y := 1
    x := 1
    z := 1
    x := 1
    y := 1
    x := 1
    z := 1
    x := 1
    y := 1
    z := 1
    x := 1
    x := 1
    x := 1
    x := 1
    y := 1
    z := 1
    y := 1
    x := 1
    x := 1
    x := 1
    y := 1
    x := 1
    z := 1
    x := 1
    y := 1
    x := 1
    z := 1
    x := 1
    y := 1
    z := 1
    x := 1
    x := 1
    x := 1
    x := 1
    y := 1
    z := 1
    y := 1
    x := 1
    x := 1
    x := 1
    y := 1
    x := 1
    z := 1
    x := 1
    y := 1
    x := 1
    z := 1
    x := 1
    y := 1
    z := 1
    x := 1
    x := 1
    z := 1
    x := 1
    x := 1
    x := 1
    x := 1
    x := 1
    endseq
    endpar
    x := 1
    x := 1
    x := 1
    x := 1
    x := 1
    x := 1
    x := 1
    x := 1
    x := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    y := ( x + y * z ) % 554321
    z := ( x + y * z ) % 554321
    y := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    y := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    z := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    y := ( x + y * z ) % 554321
    x := ( x - y * z ) % 554321
    z := ( x - y * z ) % 554321
    x := ( x - y * z ) % 554321
    y := ( x - y * z ) % 554321
    z := ( x - y * z ) % 554321
    x := ( x - y * z ) % 554321
    x := ( x - y * z ) % 554321
    x := ( x - y * z ) % 554321
    x := ( x - y * z ) % 554321
    y := ( x - y * z ) % 554321
    z := ( x - y * z ) % 554321
    y := ( x - y * z ) % 554321
    x := ( x - y * z ) % 554321
    x := ( x - y * z ) % 554321
    x := ( x - y * z ) % 554321
    y := ( x - y * z ) % 554321
    x := ( x - y * z ) % 554321
    z := ( x - y * z ) % 554321
    x := ( x - y * z ) % 554321
    y := ( x - y * z ) % 554321
    x := ( x - y + z ) % 554321
    z := ( x - y + z ) % 554321
    x := ( x - y + z ) % 554321
    y := ( x - y + z ) % 554321
    z := ( x - y + z ) % 554321
    x := ( x - y + z ) % 554321
    x := ( x - y + z ) % 554321
    x := ( x - y + z ) % 554321
    x := ( x - y + z ) % 554321
    y := ( x - y + z ) % 554321
    z := ( x - y + z ) % 554321
    y := ( x - y + z ) % 554321
    x := ( x - y + z ) % 554321
    x := ( x - y + z ) % 554321
    x := ( x + y + z ) % 554321
    y := ( x + y + z ) % 554321
    x := ( x + y + z ) % 554321
    z := ( x + y + z ) % 554321
    x := ( x + y + z ) % 554321
    y := ( x + y + z ) % 554321
    x := ( x + y + z ) % 554321
    z := ( x * y + z ) % 554321
    x := ( x * y + z ) % 554321
    y := ( x * y + z ) % 554321
    z := ( x * y + z ) % 554321
    x := ( x * y + z ) % 554321
    x := ( x * y + z ) % 554321
    x := ( x * y + z ) % 554321
    x := ( x * y + z ) % 554321
    y := ( x * y + z ) % 554321
    z := ( x * y + z ) % 554321
    y := ( x * y + z ) % 554321
    x := ( x * y + z ) % 554321
    x := ( x * y + z ) % 554321
    x := ( x * y + z ) % 554321
    y := ( x * y + z ) % 554321
    x := ( x * y + z ) % 554321
    z := ( x * y + z ) % 554321
    x := ( x * y * z ) % 554321
    y := ( x * y * z ) % 554321
    x := ( x * y * z ) % 554321
    z := ( x * y * z ) % 554321
    x := ( x * y * z ) % 554321
    y := ( x * y * z ) % 554321
    z := ( x * y * z ) % 554321
    x := ( x * y * z ) % 554321
    x := ( x * y * z ) % 554321
    x := ( x * y * z ) % 554321
    x := ( x * y * z ) % 554321
    y := ( x * y * z ) % 554321
    z := ( x * y * z ) % 554321
    y := ( x * y * z ) % 554321
    x := ( x * y * z ) % 554321
    x := ( x * y * z ) % 554321
    x := ( x * y * z ) % 554321
    y := ( x * y * z ) % 554321
    x := ( x * y * z ) % 554321
    z := ( x * y * z ) % 554321
    x := ( x * y * z ) % 554321
    y := ( x * y * z ) % 554321
    x := ( x * y * z ) % 554321
    z := ( x * y * z ) % 554321
    x := ( x * y * z ) % 554321
    y := ( x * y * z ) % 554321
    z := ( x * y * z ) % 554321
    x := ( x * y * z ) % 554321
    x := ( x * y * z ) % 554321
    x := ( x * y * z ) % 554321
    x := ( x * y * z ) % 554321
    y := ( x + y * z ) % 554321
    z := ( x + y * z ) % 554321
    y := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    y := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    z := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    y := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    z := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    y := ( x + y * z ) % 554321
    z := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    y := ( x + y * z ) % 554321
    z := ( x + y * z ) % 554321
    y := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    y := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    z := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    y := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    z := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    y := ( x + y * z ) % 554321
    z := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321
    x := ( x + y * z ) % 554321

    if cnt > 123455 then
    {
        print hex(x)
        print hex(y)
        print hex(z)
        program(self) := undef
    }   
endseq
